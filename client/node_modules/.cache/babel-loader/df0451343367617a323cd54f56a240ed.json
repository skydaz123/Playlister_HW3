{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\haodu\\\\OneDrive\\\\Desktop\\\\hw3\\\\d\\\\client\\\\src\\\\components\\\\SongCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport { GlobalStoreContext } from '../store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SongCard(props) {\n  _s();\n\n  const {\n    store\n  } = useContext(GlobalStoreContext);\n  const [isDragging, setIsDragging] = useState(false);\n  const [draggedTo, setDraggedTo] = useState(false);\n\n  const handleDragStart = event => {\n    event.dataTransfer.setData(\"song\", event.target.id);\n    setIsDragging(true);\n  };\n\n  const handleDragOver = event => {\n    event.preventDefault();\n    setDraggedTo(true);\n  };\n\n  const handleDragEnter = event => {\n    event.preventDefault();\n    setDraggedTo(true);\n  };\n\n  const handleDragLeave = event => {\n    event.preventDefault();\n    setDraggedTo(false);\n  };\n\n  const handleDrop = event => {\n    event.preventDefault();\n    let target = event.target;\n    let targetId = target.id;\n    targetId = targetId.substring(target.id.indexOf(\"-\") + 1);\n    let sourceId = event.dataTransfer.getData(\"song\");\n    sourceId = sourceId.substring(sourceId.indexOf(\"-\") + 1);\n    setDraggedTo(false);\n    setIsDragging(false);\n    store.addMoveSongTransaction(sourceId, targetId);\n  };\n\n  const {\n    song,\n    index\n  } = props;\n  let cardClass = \"list-card unselected-list-card\";\n\n  if (draggedTo) {\n    cardClass = \"selected-list-card\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: 'song-' + index,\n    className: cardClass,\n    onDoubleClick: () => store.showEditSongModal(index),\n    onDragStart: handleDragStart,\n    onDragOver: handleDragOver,\n    onDragEnter: handleDragEnter,\n    onDragLeave: handleDragLeave,\n    onDrop: handleDrop,\n    draggable: \"true\",\n    children: [index + 1, \".\", /*#__PURE__*/_jsxDEV(\"a\", {\n      id: 'song-' + index + '-link',\n      className: \"song-link\",\n      href: \"https://www.youtube.com/watch?v=\" + song.youTubeId,\n      children: [song.title, \" by \", song.artist]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      id: \"remove-song-\" + index,\n      onClick: () => store.showDeleteSongModal(index),\n      className: \"list-card-button\",\n      value: \"\\u2715\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SongCard, \"yptATkqzb/oJGBprv5z3/l4LH6w=\");\n\n_c = SongCard;\nexport default SongCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"SongCard\");","map":{"version":3,"names":["React","useContext","useState","GlobalStoreContext","SongCard","props","store","isDragging","setIsDragging","draggedTo","setDraggedTo","handleDragStart","event","dataTransfer","setData","target","id","handleDragOver","preventDefault","handleDragEnter","handleDragLeave","handleDrop","targetId","substring","indexOf","sourceId","getData","addMoveSongTransaction","song","index","cardClass","showEditSongModal","youTubeId","title","artist","showDeleteSongModal"],"sources":["C:/Users/haodu/OneDrive/Desktop/hw3/d/client/src/components/SongCard.js"],"sourcesContent":["import React, { useContext, useState } from 'react'\r\nimport { GlobalStoreContext } from '../store'\r\n\r\nfunction SongCard(props) {\r\n    const { store } = useContext(GlobalStoreContext);\r\n    const [isDragging, setIsDragging] = useState(false);\r\n    const [draggedTo, setDraggedTo] = useState(false);\r\n    \r\n    const handleDragStart = (event) => {\r\n        event.dataTransfer.setData(\"song\", event.target.id);\r\n        setIsDragging(true);\r\n    }\r\n\r\n    const handleDragOver = (event) => {\r\n        event.preventDefault();\r\n        setDraggedTo(true);\r\n    }\r\n\r\n    const handleDragEnter = (event) => {\r\n        event.preventDefault();\r\n        setDraggedTo(true);\r\n    }\r\n\r\n    const handleDragLeave = (event) => {\r\n        event.preventDefault();\r\n        setDraggedTo(false);\r\n    }\r\n\r\n    const handleDrop = (event) => {\r\n        event.preventDefault();\r\n        let target = event.target;\r\n        let targetId = target.id;\r\n        targetId = targetId.substring(target.id.indexOf(\"-\") + 1);\r\n        let sourceId = event.dataTransfer.getData(\"song\");\r\n        sourceId = sourceId.substring(sourceId.indexOf(\"-\") + 1);\r\n\r\n        setDraggedTo(false);\r\n        setIsDragging(false);\r\n\r\n        store.addMoveSongTransaction(sourceId, targetId);\r\n    }\r\n\r\n    const { song, index } = props;\r\n    let cardClass = \"list-card unselected-list-card\";\r\n    if (draggedTo){\r\n        cardClass = \"selected-list-card\";\r\n    }\r\n    return (\r\n        <div\r\n            key={index}\r\n            id={'song-' + index}\r\n            className={cardClass}\r\n            onDoubleClick={() => store.showEditSongModal(index)}\r\n            onDragStart={handleDragStart}\r\n            onDragOver={handleDragOver}\r\n            onDragEnter={handleDragEnter}\r\n            onDragLeave={handleDragLeave}\r\n            onDrop={handleDrop}\r\n            draggable=\"true\"\r\n        >\r\n            {index + 1}.\r\n            <a\r\n                id={'song-' + index + '-link'}\r\n                className=\"song-link\"\r\n                href={\"https://www.youtube.com/watch?v=\" + song.youTubeId}>\r\n                {song.title} by {song.artist}\r\n            </a>\r\n            <input\r\n                type=\"button\"\r\n                id={\"remove-song-\" + index}\r\n                onClick={() => store.showDeleteSongModal(index)}\r\n                className=\"list-card-button\"\r\n                value={\"\\u2715\"}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SongCard;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,kBAAT,QAAmC,UAAnC;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;EAAA;;EACrB,MAAM;IAAEC;EAAF,IAAYL,UAAU,CAACE,kBAAD,CAA5B;EACA,MAAM,CAACI,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,KAAD,CAA5C;EACA,MAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,KAAD,CAA1C;;EAEA,MAAMS,eAAe,GAAIC,KAAD,IAAW;IAC/BA,KAAK,CAACC,YAAN,CAAmBC,OAAnB,CAA2B,MAA3B,EAAmCF,KAAK,CAACG,MAAN,CAAaC,EAAhD;IACAR,aAAa,CAAC,IAAD,CAAb;EACH,CAHD;;EAKA,MAAMS,cAAc,GAAIL,KAAD,IAAW;IAC9BA,KAAK,CAACM,cAAN;IACAR,YAAY,CAAC,IAAD,CAAZ;EACH,CAHD;;EAKA,MAAMS,eAAe,GAAIP,KAAD,IAAW;IAC/BA,KAAK,CAACM,cAAN;IACAR,YAAY,CAAC,IAAD,CAAZ;EACH,CAHD;;EAKA,MAAMU,eAAe,GAAIR,KAAD,IAAW;IAC/BA,KAAK,CAACM,cAAN;IACAR,YAAY,CAAC,KAAD,CAAZ;EACH,CAHD;;EAKA,MAAMW,UAAU,GAAIT,KAAD,IAAW;IAC1BA,KAAK,CAACM,cAAN;IACA,IAAIH,MAAM,GAAGH,KAAK,CAACG,MAAnB;IACA,IAAIO,QAAQ,GAAGP,MAAM,CAACC,EAAtB;IACAM,QAAQ,GAAGA,QAAQ,CAACC,SAAT,CAAmBR,MAAM,CAACC,EAAP,CAAUQ,OAAV,CAAkB,GAAlB,IAAyB,CAA5C,CAAX;IACA,IAAIC,QAAQ,GAAGb,KAAK,CAACC,YAAN,CAAmBa,OAAnB,CAA2B,MAA3B,CAAf;IACAD,QAAQ,GAAGA,QAAQ,CAACF,SAAT,CAAmBE,QAAQ,CAACD,OAAT,CAAiB,GAAjB,IAAwB,CAA3C,CAAX;IAEAd,YAAY,CAAC,KAAD,CAAZ;IACAF,aAAa,CAAC,KAAD,CAAb;IAEAF,KAAK,CAACqB,sBAAN,CAA6BF,QAA7B,EAAuCH,QAAvC;EACH,CAZD;;EAcA,MAAM;IAAEM,IAAF;IAAQC;EAAR,IAAkBxB,KAAxB;EACA,IAAIyB,SAAS,GAAG,gCAAhB;;EACA,IAAIrB,SAAJ,EAAc;IACVqB,SAAS,GAAG,oBAAZ;EACH;;EACD,oBACI;IAEI,EAAE,EAAE,UAAUD,KAFlB;IAGI,SAAS,EAAEC,SAHf;IAII,aAAa,EAAE,MAAMxB,KAAK,CAACyB,iBAAN,CAAwBF,KAAxB,CAJzB;IAKI,WAAW,EAAElB,eALjB;IAMI,UAAU,EAAEM,cANhB;IAOI,WAAW,EAAEE,eAPjB;IAQI,WAAW,EAAEC,eARjB;IASI,MAAM,EAAEC,UATZ;IAUI,SAAS,EAAC,MAVd;IAAA,WAYKQ,KAAK,GAAG,CAZb,oBAaI;MACI,EAAE,EAAE,UAAUA,KAAV,GAAkB,OAD1B;MAEI,SAAS,EAAC,WAFd;MAGI,IAAI,EAAE,qCAAqCD,IAAI,CAACI,SAHpD;MAAA,WAIKJ,IAAI,CAACK,KAJV,UAIqBL,IAAI,CAACM,MAJ1B;IAAA;MAAA;MAAA;MAAA;IAAA,QAbJ,eAmBI;MACI,IAAI,EAAC,QADT;MAEI,EAAE,EAAE,iBAAiBL,KAFzB;MAGI,OAAO,EAAE,MAAMvB,KAAK,CAAC6B,mBAAN,CAA0BN,KAA1B,CAHnB;MAII,SAAS,EAAC,kBAJd;MAKI,KAAK,EAAE;IALX;MAAA;MAAA;MAAA;IAAA,QAnBJ;EAAA,GACSA,KADT;IAAA;IAAA;IAAA;EAAA,QADJ;AA6BH;;GAzEQzB,Q;;KAAAA,Q;AA2ET,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}